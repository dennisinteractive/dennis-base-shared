/**
 * @file base-layouts/_narrow.scss
 *   Narrow layout styles for Dennis Base using the responsive layout
 *
 * This file holds all layout specific styles for the "narrow" viewport.
 *
 * Please note that only layout specific styles and element styles specific to
 * this viewport should go here. Any generic styling of various page elements
 * should go to _styles.scss instead.
 *
 * @see _responsive.scss
 */

// Grid setup
// =============================================================================
$grid-size-sidebar-first: 5 !default;
$grid-size-sidebar-second: 8 !default;

// If narrow layout is stacked then masonry will flow blocks in sidebar second
// to this amount of columns.
$narrow-stacked-columns: 2 !default;

// If this is set to true then masonry will use fixed size blocks for the region.
$narrow-stacked-fixed-blocks: true !default;

$grid-sidebar-order:             102 !default;
$grid-position-content:          0;
$grid-position-sidebar-first:    0;
$grid-position-sidebar-second:   0;


body {

  // Grid setup with narrow_stacked turned OFF
  // ---------------------------------------------------------------------------
  // These calculations assume that both sidebars, if present, are placed next
  // or around the main content area.
  &.narrow-grid.two-sidebars {
    // Get grid sidebar positions
    @if $grid-sidebar-order == 012 {
      $grid-position-content: 1;
      $grid-position-sidebar-first: $zen-column-count - $grid-size-sidebar-first - $grid-size-sidebar-second + 1;
      $grid-position-sidebar-second: $zen-column-count - $grid-size-sidebar-second + 1;
    }
    @else if $grid-sidebar-order == 021 {
      $grid-position-content: 1;
      $grid-position-sidebar-first: $zen-column-count - $grid-size-sidebar-first + 1;
      $grid-position-sidebar-second: $zen-column-count - $grid-size-sidebar-first - $grid-size-sidebar-second + 1;
    }
    @else if $grid-sidebar-order == 102 {
      $grid-position-content: $grid-size-sidebar-first + 1;
      $grid-position-sidebar-first: 1;
      $grid-position-sidebar-second: $zen-column-count - $grid-size-sidebar-second + 1;
    }
    @else if $grid-sidebar-order == 120 {
      $grid-position-content: $grid-size-sidebar-first + $grid-size-sidebar-second + 1;
      $grid-position-sidebar-first: 1;
      $grid-position-sidebar-second: $grid-size-sidebar-first + 1;
    }
    @else if $grid-sidebar-order == 201 {
      $grid-position-content: $grid-size-sidebar-second + 1;
      $grid-position-sidebar-first: $zen-column-count - $grid-size-sidebar-first + 1;
      $grid-position-sidebar-second: 1;
    }
    @else if $grid-sidebar-order == 210 {
      $grid-position-content: $grid-size-sidebar-first + $grid-size-sidebar-second + 1;
      $grid-position-sidebar-first: $grid-size-sidebar-second + 1;
      $grid-position-sidebar-second: 1;
    }

    #group-content {
      @include zen-grid-item($zen-column-count - $grid-size-sidebar-first - $grid-size-sidebar-second, $grid-position-content);
    }
    #sidebar-first {
      @include zen-grid-item($grid-size-sidebar-first, $grid-position-sidebar-first);
    }
    #sidebar-second-alt,
    #sidebar-second {
      @include zen-grid-item($grid-size-sidebar-second, $grid-position-sidebar-second);
    }
  }
  &.narrow-grid.one-sidebar.sidebar-second {
    // Get grid sidebar positions
    @if $grid-sidebar-order == 012 or $grid-sidebar-order == 021 or $grid-sidebar-order == 102 {
      $grid-position-content: 1;
      $grid-position-sidebar-second: $zen-column-count - $grid-size-sidebar-second + 1;
    }
    @else if $grid-sidebar-order == 120 or $grid-sidebar-order == 201 or $grid-sidebar-order == 210 {
      $grid-position-content: $grid-size-sidebar-second + 1;
      $grid-position-sidebar-second: 1;
    }

    #group-content {
      @include zen-grid-item($zen-column-count - $grid-size-sidebar-second, $grid-position-content);
    }
    #sidebar-second-alt,
    #sidebar-second {
      @include zen-grid-item($grid-size-sidebar-second, $grid-position-sidebar-second);
    }
  }

  &.narrow-grid.one-sidebar.sidebar-first {
    // Get grid sidebar positions
    @if $grid-sidebar-order == 012 or $grid-sidebar-order == 021 or $grid-sidebar-order == 201 {
      $grid-position-content: 1;
      $grid-position-sidebar-first: $zen-column-count - $grid-size-sidebar-first + 1;
    }
    @else if $grid-sidebar-order == 102 or $grid-sidebar-order == 120 or $grid-sidebar-order == 210 {
      $grid-position-content: $grid-size-sidebar-first + 1;
      $grid-position-sidebar-first: 1;
    }

    #group-content {
      @include zen-grid-item($zen-column-count - $grid-size-sidebar-first, $grid-position-content);
    }
    #sidebar-second-alt,
    #sidebar-first {
      @include zen-grid-item($grid-size-sidebar-first, $grid-position-sidebar-first);
    }
  }


  // Grid setup with narrow_stacked turned ON
  // ---------------------------------------------------------------------------
  // This calculation excludes the sidebar second as it will be wrapped under
  // the content area.
  //
  // Both sidebars or first sidebar only.
  &.narrow-stacked.two-sidebars,
  &.narrow-stacked.one-sidebar.sidebar-first,
  &.narrow-stacked.one-sidebar.sidebar-first-alt {
    // Get sidebar grid positions
    @if $grid-sidebar-order == 012 or $grid-sidebar-order == 021 or $grid-sidebar-order == 201 {
      $grid-position-content: 1;
      $grid-position-sidebar-first: $zen-column-count - $grid-size-sidebar-first + 1;
    }
    @else if $grid-sidebar-order == 102 or $grid-sidebar-order == 120 or $grid-sidebar-order == 210 {
      $grid-position-content: $grid-size-sidebar-first + 1;
      $grid-position-sidebar-first: 1;
    }
  }

  &.narrow-stacked.two-sidebars {
    #group-content {
      @include zen-grid-item($zen-column-count - $grid-size-sidebar-first, $grid-position-content);
    }
    #sidebar-first {
      @include zen-grid-item($grid-size-sidebar-first, $grid-position-sidebar-first);
    }
    #sidebar-second-alt,
    #sidebar-second {
      @include zen-clear;
      @include zen-grid-item($zen-column-count, 1);
    }
  }

  // Stacked with first sidebar only
  &.narrow-stacked.one-sidebar.sidebar-first,
  &.narrow-stacked.one-sidebar.sidebar-first-alt {
    #group-content {
      @include zen-grid-item($zen-column-count - $grid-size-sidebar-first, $grid-position-content);
    }
    #sidebar-first,
    #sidebar-first-alt {
      @include zen-grid-item($grid-size-sidebar-first, $grid-position-sidebar-first);
    }
  }

  // Stacked with second sidebar only
  // Both content and sidebar will get full width as sidebar blocks will render
  // via masonry.js
  &.narrow-stacked.one-sidebar.sidebar-second {
    #group-content {
      @include zen-grid-item($zen-column-count, 1);
    }
    #sidebar-second-alt,
    #sidebar-second {
      @include zen-clear;
      @if ($narrow-stacked-fixed-blocks == false) {
        @include zen-grid-item($zen-column-count, 1);
      }
    }
  }


  // No sidebars are defined, content can go to full page width, regardless of
  // the narrow_stacked configuration setting.
  &.no-sidebars {
    #group-content {
      @include zen-grid-item($zen-column-count, 1);
    }
  }
}


// Page element
// -----------------------------------------------------------------------------
.page {
  @include zen-grid-container();
}


// Second sidebar blocks with masonry enabled.
body.narrow-stacked {
  #sidebar-second,
  #sidebar-second-alt {
    margin-left: auto;
    margin-right: auto;
    .block {
      @if ($narrow-stacked-fixed-blocks == false) {
        width: 100% / $narrow-stacked-columns;
      }
      @else {
        width: $grid-size-sidebar-second * ($site-width-desktop / $zen-column-count);
      }
    }
  }
}

// Region and Block container setup
// -----------------------------------------------------------------------------
.block,
.page-title,
.breadcrumb,
.grid-block {
  @include block-gutter-default;
}

// No gutters for blocks in node top and node_bottom regions.
#node-top,
#node-bottom {
  .block {
    padding-left: 0;
    padding-right: 0;
  }
}

.node-inline > .block {
  @include block-gutter-node-inline;
}


//  Header region
// -----------------------------------------------------------------------------
#header-group {
  padding-top: 10px;
  padding-bottom: 10px;
  // Hide navigation toggle buttons on wider viewports.
  .nav-button {
    @include element-invisible;
  }
}


// Menu Group
// ============================================================================= [SPLIT]
// Turn on visibility of menu blocks.
.site-menus {

  // Blocks in the main navigation area should be invisible by default and can be
  // toggled by the buttons.
  .block {
    @include element-invisible-off();
    overflow: visible;
    position: relative;
  }
  .block-menu,
  .block-superfish {
    margin-bottom: 0;
    .content {
      @include clearfix;
    }
  }
}


// Menu region
// -----------------------------------------------------------------------------
#block-system-main-menu {
  float: left;
  width: auto;
}
#block-search-form {
  float: right;
  width: auto;
}
.main-menu {
  ul.menu {
    li {
      position: relative;
      float: left;
      ul.menu {
        @include element-invisible;
        margin-left: 0;
        li {
          width: 100%;
        }
      }
      html.touch &.hover,
      html.no-js &:hover,
      html.no-touch &:hover {
        ul.menu {
          @include element-invisible-off;
          left: 0;
          position: absolute !important;
          width: $main-menu-submenu-width;
          z-index: 999;
        }
      }
    }
  }
}

li {
  &.last,
  &:last-child {
    & > a {
      border: none;
    }
  }
}


// DFP ad blocks
// ----------------------------------------------------------------------------- [SPLIT]
.block-dfp,
.block-onscroll {
  // Inline ad blocks have their margins/paddings set in their inner
  // containers to fix whitespace if no ad is served into the slot.
  @include block-no-gutter;
}


//  Postscript & Footer regions
// -----------------------------------------------------------------------------
#footer {
  #footer-logo {
    @include element-invisible-off;
  }
  #block-dfp-leaderboard-2 {
    @include zen-clear();
  }
}

// Pre footer
.region-pre-footer {
  @include zen-clear();
}

// Dennis Core footer
// -----------------------------------------------------------------------------
#block-dennis-core-dennis-core-footer {
  @include zen-clear();
  @include box-sizing(content-box);
  .content {
    padding-right: 0;
  }
  .links {
    float: right;
    margin-top: 0;
  }
}


// Content Regions
// Needs splitting across media queries
// ----------------------------------------------------------------------------- [SPLIT]
.primary-image,
.teaser-image,
.field-name-field-primary-image,
.views-field-field-gallery-files,
.field-name-field-author-image {
  float: left;
  margin-right: $zen-gutter-width;
  margin-bottom: 10px;
}
